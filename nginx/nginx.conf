worker_processes 1;
 
events { worker_connections 1024; }
 
http {
 
    sendfile on;
    # We need to declare this so NGINX can use the Docker Compose-provided
    # name server to resolve 'auth_service' and 'data_service' as URLs
    resolver 127.0.0.11;
 
    server {
        listen 80;
	server_name localhost;
	
	# Don't ask me why, but the below routes failed without having
	# something defined for the root route. So this is used as a dummy
	# to get things working.
	location / {
	rewrite ^/api/auth(.*)$ $1 last;
            proxy_pass         http://auth_service:5000;
	}
 
        location /api/auth {
	    # We need to strip the "/auth" part of the URL; otherwise,
	    # NGINX will pass that onto the respective Flask app and
	    # Cause it to bark
	    rewrite ^/api/auth(.*)$ $1 last;
            proxy_pass         http://auth_service:5000;
            #proxy_redirect     off;
            #proxy_set_header   Host $host;
            #proxy_set_header   X-Real-IP $remote_addr;
            #proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Forwarded-Host $server_name;
        }
	location /api/data {
	    rewrite ^/api/data(.*)$ $1 last;
            proxy_pass         http://data_service:5000;
            #proxy_redirect     off;
            #proxy_set_header   Host $host;
            #proxy_set_header   X-Real-IP $remote_addr;
            #proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
